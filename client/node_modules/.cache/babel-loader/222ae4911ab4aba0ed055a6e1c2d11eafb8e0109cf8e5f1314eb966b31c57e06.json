{"ast":null,"code":"var _jsxFileName = \"/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/AddTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/AddTaskForm.css\"; // Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTaskForm({\n  onAdd\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim() || !description.trim()) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    setIsSubmitting(true);\n    setError(\"\");\n    try {\n      // Log the data being sent in the POST request\n      console.log(\"Task Data:\", {\n        title,\n        description\n      });\n\n      // Call the onAdd function to add the task\n      await onAdd({\n        title,\n        description\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n    } catch (err) {\n      setError(\"Failed to add task. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task-form-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-task-form\",\n      children: [\" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        className: \"task-input\" // Add classes for individual elements if needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\",\n        className: \"task-textarea\" // Add classes for individual elements if needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: \"task-submit-button\",\n        children: isSubmitting ? \"Adding...\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTaskForm, \"jBkWIdR1BlS2qG388Qjt8HUYJyk=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTaskForm","onAdd","_s","title","setTitle","description","setDescription","isSubmitting","setIsSubmitting","error","setError","handleSubmit","e","preventDefault","trim","console","log","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/AddTaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/AddTaskForm.css\"; // Make sure this path is correct\n\nfunction AddTaskForm({ onAdd }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!title.trim() || !description.trim()) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    setIsSubmitting(true);\n    setError(\"\");\n\n    try {\n      // Log the data being sent in the POST request\n      console.log(\"Task Data:\", { title, description });\n\n      // Call the onAdd function to add the task\n      await onAdd({ title, description });\n\n      setTitle(\"\");\n      setDescription(\"\");\n    } catch (err) {\n      setError(\"Failed to add task. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"add-task-form-container\">\n      {\" \"}\n      {/* Add the container class here */}\n      <form onSubmit={handleSubmit} className=\"add-task-form\">\n        {\" \"}\n        {/* Add the form class if needed */}\n        {error && <p className=\"error\">{error}</p>}\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n          className=\"task-input\" // Add classes for individual elements if needed\n        />\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Description\"\n          className=\"task-textarea\" // Add classes for individual elements if needed\n        />\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"task-submit-button\"\n        >\n          {isSubmitting ? \"Adding...\" : \"Add Task\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}