{"ast":null,"code":"var _jsxFileName = \"/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/AddTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTaskForm({\n  onTasksUpdate\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(\"/api/tasks/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (response.ok) {\n        setTitle(\"\");\n        setDescription(\"\");\n        setError(\"\");\n        await onTasksUpdate(); // Refresh the task list\n      } else {\n        setError(\"Failed to add task. Please try again.\");\n      }\n    } catch (error) {\n      setError(\"An error occurred: \" + error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-task-form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\",\n        className: \"task-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: \"task-submit-button\",\n        children: isSubmitting ? \"Adding...\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTaskForm, \"jBkWIdR1BlS2qG388Qjt8HUYJyk=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTaskForm","onTasksUpdate","_s","title","setTitle","description","setDescription","isSubmitting","setIsSubmitting","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/AddTaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport '../styles'\nfunction AddTaskForm({ onTasksUpdate }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!title || !description) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch(\"/api/tasks/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title, description }),\n      });\n\n      if (response.ok) {\n        setTitle(\"\");\n        setDescription(\"\");\n        setError(\"\");\n        await onTasksUpdate(); // Refresh the task list\n      } else {\n        setError(\"Failed to add task. Please try again.\");\n      }\n    } catch (error) {\n      setError(\"An error occurred: \" + error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"add-task-form-container\">\n      <form onSubmit={handleSubmit} className=\"add-task-form\">\n        {error && <p className=\"error\">{error}</p>}\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n          className=\"task-input\"\n        />\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Description\"\n          className=\"task-textarea\"\n        />\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"task-submit-button\"\n        >\n          {isSubmitting ? \"Adding...\" : \"Add Task\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}