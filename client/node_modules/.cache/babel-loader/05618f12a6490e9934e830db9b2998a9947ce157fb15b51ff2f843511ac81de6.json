{"ast":null,"code":"var _jsxFileName = \"/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Task from \"./task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\"/api/tasks/user/:userId\"); // Replace ':userId' with actual user ID\n        if (!response.ok) {\n          throw new Error(\"Error fetching tasks\");\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching tasks: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"ojYhooNsno+ZHjjlGzjiqOG+IPU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","isLoading","setIsLoading","error","setError","fetchTasks","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","id","_c","$RefreshReg$"],"sources":["/Users/alisecervantes/Desktop/Milestone-3-/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Task from \"./task\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const response = await fetch(\"/api/tasks/user/:userId\"); // Replace ':userId' with actual user ID\n        if (!response.ok) {\n          throw new Error(\"Error fetching tasks\");\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading tasks...</p>;\n  }\n\n  if (error) {\n    return <p>Error fetching tasks: {error}</p>;\n  }\n\n  return (\n    <div>\n      {tasks.length > 0 ? (\n        tasks.map((task) => <Task key={task.id} task={task} />)\n      ) : (\n        <p>No tasks available</p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;QACzD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,QAAQ,CAACU,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAkB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,IAAIf,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAkB,QAAA,GAAG,wBAAsB,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7C;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,EACGf,KAAK,CAACoB,MAAM,GAAG,CAAC,GACfpB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBAAKzB,OAAA,CAACF,IAAI;MAAe2B,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,gBAEvDtB,OAAA;MAAAkB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}